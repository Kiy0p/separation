#!/usr/bin/env python3

import sys
import os

import tools

######################### STEP 3 : sortes the list of list alphabeticly ######################### 

def sortList(friendsList, j): # Selection sort algo
    index = j
    for i in range(j, len(friendsList)):
        if friendsList[i][0] < friendsList[index][0]:
            index = i
    friendsList[index], friendsList[j] = friendsList[j], friendsList[index]
    if j < len(friendsList) - 1:
        sortList(friendsList, j + 1)
    else:
        return

######################### STEP 2 : stores friends list in a list of list ######################### 

def storeFileContent(fd):
    friendsList = []
    fd = map(lambda s: s.strip(), fd)
    for line in fd: # purpose of the loop : Kyle is friend with Tom -> [[Kyle, Tom], [Tom, Kyle]...]
        hisName = line[:line.index(" is friends with ")]
        hisFriend = line[line.index(" is friends with ") + 17:]
        if tools.findNameInList(friendsList, hisName) == -1: #if hisName isn't in list, adds it and then adds hisFriend to it (as a friend).
            friendsList.append([hisName])
            friendsList[tools.findNameInList(friendsList, hisName)].append(hisFriend)
        else: #if hisName is in the list, simply adds hisFriend to it.
            friendsList[tools.findNameInList(friendsList, hisName)].append(hisFriend)
        if tools.findNameInList(friendsList, hisFriend) == -1: #if hisName isn't in the list, adds it and adds the hisFriend to it (as a friend).
            friendsList.append([hisFriend])
            friendsList[tools.findNameInList(friendsList, hisFriend)].append(hisName)
        else: #if hisFriend is in the list, simply adds hisName to it.
            friendsList[tools.findNameInList(friendsList, hisFriend)].append(hisName)
    return(friendsList) # returns list of list

######################### STEP 1 : gets the arguments, checks for errors and returns file content ######################### 

def getArgs():
    if (len(sys.argv) < 3 or len(sys.argv) > 4):
        tools.printUsage()
        sys.exit(84)
    elif (len(sys.argv) == 2 and sys.argv[1] == "-h"):
        tools.printUsage()
        sys.exit(0)
    else:
        if os.path.isfile(sys.argv[1]):
            fd = open(sys.argv[1], "r")
            return(fd) # returns the entire file
        else:
            sys.exit(84)

######################### STEP 0 : main ######################### 

def main():
    sys.setrecursionlimit(5000)

    friendsList = storeFileContent(getArgs())
    sortList(friendsList, 0)
    if len(sys.argv) == 4:
        tools.printResultOne(friendsList)
    elif len(sys.argv) == 3 and sys.argv[2].isnumeric:
        tools.printResultTwo(friendsList)

main()